{"ast":null,"code":"// import axios from 'axios';\n\n// // הגדרת כתובת ה-API כ-default\n// const apiUrl = \"http://localhost:5073\"; // אם השרת פועל על HTTP\n// axios.defaults.baseURL = apiUrl;\n\n// axios.interceptors.response.use(\n//   response => response,\n//   error => {\n//       console.error('Error occurred:', error);\n//       if (error.response && error.response.status === 401) {\n//           window.location.href = '/login'; // הפנה לדף התחברות\n//       }\n//       return Promise.reject(error);\n//   }\n// );\n\n// export default {\n//   getTasks: async () => {\n//     const response = await axios.get('/tasks'); // שינוי ל-GET\n//     return response.data;\n//   },\n\n//   // addTask: async (name) => {\n//   //   console.log('addTask', name);\n//   //   const result = await axios.post('/items', { name });\n//   //   return result.data;\n//   // },\n//   addTask: async(name) => {\n//     console.log('addTask', name);\n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, { name });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error adding task:\", error.message);\n\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// },\n\n//   setCompleted: async (id, isComplete) => {\n//     console.log('setCompleted', { id, isComplete });\n//     const result = await axios.put(`/items/${id}`, { isComplete });\n//     return result.data;\n//   },\n\n//   deleteTask: async (id) => {\n//     console.log('deleteTask', id);\n//     await axios.delete(`/items/${id}`);\n//   }\n// };\n\n// import axios from 'axios';\n//  const apiUrl = \"http://localhost:5073\";\n//  axios.defaults.baseURL = apiUrl;\n// // הוספת interceptor לתפיסת שגיאות\n// axios.interceptors.response.use(\n//     response => response,\n//     error => {\n//         console.error(\"HTTP Error:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n//     }\n// );\n// export default {\n\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n//   addTask: async(name) => {\n//     console.log('addTask', name);\n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, { name });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error adding task:\", error.message);\n\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// },\n//     setCompleted: async (id, isComplete) => {\n//       console.log('setCompleted', { id, isComplete });\n//       try {\n//           // שליפת הפריט הקיים מהשרת\n//           const existingItemResponse = await axios.get(`${apiUrl}/items/${id}`);\n//           const existingItem = existingItemResponse.data;\n\n//           // הכנת הנתונים לעדכון\n//           const updatedItem = {\n//               name: existingItem.name, // שומר את השם הקודם\n//               isComplete: isComplete // מעדכן את ה-isComplete\n//           };\n\n//           // שליחת הבקשה לעדכון\n//           const result = await axios.put(`${apiUrl}/items/${id}`, updatedItem, {\n//               headers: {\n//                   'Content-Type': 'application/json'\n//               }\n//           });\n//           return result.data;\n//       } catch (error) {\n//           console.error(\"Error setting task completion:\", error.message);\n//           throw error;\n//       }\n//   },\n\n//   deleteTask: async (id) => {\n//     try {\n//         await axios.delete(`/items/${id}`);\n//         console.log('Task deleted successfully');\n//     } catch (error) {\n//         console.error(\"Error deleting task:\", error.message);\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// }\n\n// };","map":{"version":3,"names":[],"sources":["C:/Users/user1/Documents/שיעורי בית בתכנות/תשפה/פרויקט 3  ToDo List/ToDoListReact-master/src/service.js"],"sourcesContent":["// import axios from 'axios';\n\n// // הגדרת כתובת ה-API כ-default\n// const apiUrl = \"http://localhost:5073\"; // אם השרת פועל על HTTP\n// axios.defaults.baseURL = apiUrl;\n\n// axios.interceptors.response.use(\n//   response => response,\n//   error => {\n//       console.error('Error occurred:', error);\n//       if (error.response && error.response.status === 401) {\n//           window.location.href = '/login'; // הפנה לדף התחברות\n//       }\n//       return Promise.reject(error);\n//   }\n// );\n\n// export default {\n//   getTasks: async () => {\n//     const response = await axios.get('/tasks'); // שינוי ל-GET\n//     return response.data;\n//   },\n\n//   // addTask: async (name) => {\n//   //   console.log('addTask', name);\n//   //   const result = await axios.post('/items', { name });\n//   //   return result.data;\n//   // },\n//   addTask: async(name) => {\n//     console.log('addTask', name);\n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, { name });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error adding task:\", error.message);\n\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// },\n\n//   setCompleted: async (id, isComplete) => {\n//     console.log('setCompleted', { id, isComplete });\n//     const result = await axios.put(`/items/${id}`, { isComplete });\n//     return result.data;\n//   },\n\n\n//   deleteTask: async (id) => {\n//     console.log('deleteTask', id);\n//     await axios.delete(`/items/${id}`);\n//   }\n// };\n\n\n\n\n\n// import axios from 'axios';\n//  const apiUrl = \"http://localhost:5073\";\n//  axios.defaults.baseURL = apiUrl;\n// // הוספת interceptor לתפיסת שגיאות\n// axios.interceptors.response.use(\n//     response => response,\n//     error => {\n//         console.error(\"HTTP Error:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n//     }\n// );\n// export default {\n\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n  \n//   addTask: async(name) => {\n//     console.log('addTask', name);\n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, { name });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error adding task:\", error.message);\n\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// },\n//     setCompleted: async (id, isComplete) => {\n//       console.log('setCompleted', { id, isComplete });\n//       try {\n//           // שליפת הפריט הקיים מהשרת\n//           const existingItemResponse = await axios.get(`${apiUrl}/items/${id}`);\n//           const existingItem = existingItemResponse.data;\n  \n//           // הכנת הנתונים לעדכון\n//           const updatedItem = {\n//               name: existingItem.name, // שומר את השם הקודם\n//               isComplete: isComplete // מעדכן את ה-isComplete\n//           };\n  \n//           // שליחת הבקשה לעדכון\n//           const result = await axios.put(`${apiUrl}/items/${id}`, updatedItem, {\n//               headers: {\n//                   'Content-Type': 'application/json'\n//               }\n//           });\n//           return result.data;\n//       } catch (error) {\n//           console.error(\"Error setting task completion:\", error.message);\n//           throw error;\n//       }\n//   },\n  \n\n\n\n\n\n//   deleteTask: async (id) => {\n//     try {\n//         await axios.delete(`/items/${id}`);\n//         console.log('Task deleted successfully');\n//     } catch (error) {\n//         console.error(\"Error deleting task:\", error.message);\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// }\n\n// };\n\n\n\n\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}