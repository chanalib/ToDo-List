{"ast":null,"code":"import axios from 'axios';\n\n// הגדרת כתובת ה-API כ-default\nconst apiUrl = \"http://localhost:5073\"; // אם השרת פועל על HTTP\naxios.defaults.baseURL = apiUrl;\naxios.interceptors.response.use(response => response, error => {\n  console.error(\"HTTP Error:\", error.message);\n  if (error.response) {\n    console.error(\"Response data:\", error.response.data);\n    console.error(\"Response status:\", error.response.status);\n  }\n  return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n});\nexport default {\n  getTasks: async () => {\n    const response = await axios.get('/items'); // שינוי ל-GET\n    return response.data;\n  },\n  // addTask: async (name) => {\n  //   console.log('addTask', name);\n  //   const result = await axios.post('/items', { name });\n  //   return result.data;\n  // },\n  addTask: async name => {\n    console.log('addTask', name);\n    try {\n      const result = await axios.post(`${apiUrl}/items`, {\n        name\n      });\n      return result.data;\n    } catch (error) {\n      console.error(\"Error adding task:\", error.message);\n      throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    const result = await axios.put(`/items/${id}`, {\n      isComplete\n    });\n    return result.data;\n  },\n  deleteTask: async id => {\n    console.log('deleteTask', id);\n    await axios.delete(`/items/${id}`);\n  }\n};\n\n// import axios from 'axios';\n//  const apiUrl = \"http://localhost:5073\";\n//  axios.defaults.baseURL = apiUrl;\n// // הוספת interceptor לתפיסת שגיאות\n// axios.interceptors.response.use(\n//     response => response,\n//     error => {\n//         console.error(\"HTTP Error:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n//     }\n// );\n// export default {\n\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n//   addTask: async(name) => {\n//     console.log('addTask', name);\n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, { name });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error adding task:\", error.message);\n\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// },\n//     setCompleted: async (id, isComplete) => {\n//       console.log('setCompleted', { id, isComplete });\n//       try {\n//           // שליפת הפריט הקיים מהשרת\n//           const existingItemResponse = await axios.get(`${apiUrl}/items/${id}`);\n//           const existingItem = existingItemResponse.data;\n\n//           // הכנת הנתונים לעדכון\n//           const updatedItem = {\n//               name: existingItem.name, // שומר את השם הקודם\n//               isComplete: isComplete // מעדכן את ה-isComplete\n//           };\n\n//           // שליחת הבקשה לעדכון\n//           const result = await axios.put(`${apiUrl}/items/${id}`, updatedItem, {\n//               headers: {\n//                   'Content-Type': 'application/json'\n//               }\n//           });\n//           return result.data;\n//       } catch (error) {\n//           console.error(\"Error setting task completion:\", error.message);\n//           throw error;\n//       }\n//   },\n\n//   deleteTask: async (id) => {\n//     try {\n//         await axios.delete(`/items/${id}`);\n//         console.log('Task deleted successfully');\n//     } catch (error) {\n//         console.error(\"Error deleting task:\", error.message);\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// }\n\n// };","map":{"version":3,"names":["axios","apiUrl","defaults","baseURL","interceptors","response","use","error","console","message","data","status","Promise","reject","getTasks","get","addTask","name","log","result","post","setCompleted","id","isComplete","put","deleteTask","delete"],"sources":["C:/Users/user1/Documents/שיעורי בית בתכנות/תשפה/פרויקט 3  ToDo List/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\n// הגדרת כתובת ה-API כ-default\nconst apiUrl = \"http://localhost:5073\"; // אם השרת פועל על HTTP\naxios.defaults.baseURL = apiUrl;\n\naxios.interceptors.response.use(\n  response => response,\n  error => {\n      console.error(\"HTTP Error:\", error.message);\n      if (error.response) {\n          console.error(\"Response data:\", error.response.data);\n          console.error(\"Response status:\", error.response.status);\n      }\n      return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n  }\n);\nexport default {\n  getTasks: async () => {\n    const response = await axios.get('/items'); // שינוי ל-GET\n    return response.data;\n  },\n\n  // addTask: async (name) => {\n  //   console.log('addTask', name);\n  //   const result = await axios.post('/items', { name });\n  //   return result.data;\n  // },\n  addTask: async(name) => {\n    console.log('addTask', name);\n    try {\n        const result = await axios.post(`${apiUrl}/items`, { name });\n        return result.data;\n    } catch (error) {\n        console.error(\"Error adding task:\", error.message);\n\n        throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n    }\n},\n\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', { id, isComplete });\n    const result = await axios.put(`/items/${id}`, { isComplete });\n    return result.data;\n  },\n\n\n  deleteTask: async (id) => {\n    console.log('deleteTask', id);\n    await axios.delete(`/items/${id}`);\n  }\n};\n\n\n\n\n\n// import axios from 'axios';\n//  const apiUrl = \"http://localhost:5073\";\n//  axios.defaults.baseURL = apiUrl;\n// // הוספת interceptor לתפיסת שגיאות\n// axios.interceptors.response.use(\n//     response => response,\n//     error => {\n//         console.error(\"HTTP Error:\", error.message);\n//         if (error.response) {\n//             console.error(\"Response data:\", error.response.data);\n//             console.error(\"Response status:\", error.response.status);\n//         }\n//         return Promise.reject(error); // זרוק את השגיאה כדי שנוכל לטפל בה במקום אחר\n//     }\n// );\n// export default {\n\n//   getTasks: async () => {\n//     const result = await axios.get(`${apiUrl}/items`)    \n//     return result.data;\n//   },\n\n  \n//   addTask: async(name) => {\n//     console.log('addTask', name);\n//     try {\n//         const result = await axios.post(`${apiUrl}/items`, { name });\n//         return result.data;\n//     } catch (error) {\n//         console.error(\"Error adding task:\", error.message);\n\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// },\n//     setCompleted: async (id, isComplete) => {\n//       console.log('setCompleted', { id, isComplete });\n//       try {\n//           // שליפת הפריט הקיים מהשרת\n//           const existingItemResponse = await axios.get(`${apiUrl}/items/${id}`);\n//           const existingItem = existingItemResponse.data;\n  \n//           // הכנת הנתונים לעדכון\n//           const updatedItem = {\n//               name: existingItem.name, // שומר את השם הקודם\n//               isComplete: isComplete // מעדכן את ה-isComplete\n//           };\n  \n//           // שליחת הבקשה לעדכון\n//           const result = await axios.put(`${apiUrl}/items/${id}`, updatedItem, {\n//               headers: {\n//                   'Content-Type': 'application/json'\n//               }\n//           });\n//           return result.data;\n//       } catch (error) {\n//           console.error(\"Error setting task completion:\", error.message);\n//           throw error;\n//       }\n//   },\n  \n\n\n\n\n\n//   deleteTask: async (id) => {\n//     try {\n//         await axios.delete(`/items/${id}`);\n//         console.log('Task deleted successfully');\n//     } catch (error) {\n//         console.error(\"Error deleting task:\", error.message);\n//         throw error; // זרוק את השגיאה כדי שתוכל לטפל בה במקום אחר\n//     }\n// }\n\n// };\n\n\n\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,MAAM,GAAG,uBAAuB,CAAC,CAAC;AACxCD,KAAK,CAACE,QAAQ,CAACC,OAAO,GAAGF,MAAM;AAE/BD,KAAK,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC7BD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EACLC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAACE,OAAO,CAAC;EAC3C,IAAIF,KAAK,CAACF,QAAQ,EAAE;IAChBG,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACF,QAAQ,CAACK,IAAI,CAAC;IACpDF,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAACF,QAAQ,CAACM,MAAM,CAAC;EAC5D;EACA,OAAOC,OAAO,CAACC,MAAM,CAACN,KAAK,CAAC,CAAC,CAAC;AAClC,CACF,CAAC;AACD,eAAe;EACbO,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMT,QAAQ,GAAG,MAAML,KAAK,CAACe,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC5C,OAAOV,QAAQ,CAACK,IAAI;EACtB,CAAC;EAED;EACA;EACA;EACA;EACA;EACAM,OAAO,EAAE,MAAMC,IAAI,IAAK;IACtBT,OAAO,CAACU,GAAG,CAAC,SAAS,EAAED,IAAI,CAAC;IAC5B,IAAI;MACA,MAAME,MAAM,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,GAAGnB,MAAM,QAAQ,EAAE;QAAEgB;MAAK,CAAC,CAAC;MAC5D,OAAOE,MAAM,CAACT,IAAI;IACtB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACE,OAAO,CAAC;MAElD,MAAMF,KAAK,CAAC,CAAC;IACjB;EACJ,CAAC;EAECc,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACtCf,OAAO,CAACU,GAAG,CAAC,cAAc,EAAE;MAAEI,EAAE;MAAEC;IAAW,CAAC,CAAC;IAC/C,MAAMJ,MAAM,GAAG,MAAMnB,KAAK,CAACwB,GAAG,CAAC,UAAUF,EAAE,EAAE,EAAE;MAAEC;IAAW,CAAC,CAAC;IAC9D,OAAOJ,MAAM,CAACT,IAAI;EACpB,CAAC;EAGDe,UAAU,EAAE,MAAOH,EAAE,IAAK;IACxBd,OAAO,CAACU,GAAG,CAAC,YAAY,EAAEI,EAAE,CAAC;IAC7B,MAAMtB,KAAK,CAAC0B,MAAM,CAAC,UAAUJ,EAAE,EAAE,CAAC;EACpC;AACF,CAAC;;AAMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}